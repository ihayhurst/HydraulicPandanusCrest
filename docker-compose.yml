
services:

  flask:
    build: ./flask
    container_name: flask
    restart: always
    depends_on:
      - redis
    environment:
      - FLASK_ENV=development
      - APP_NAME=HPCadmin
      - TZ=Europe/London
    volumes:
      - ./flask:/app
      - ../inventory/data:/data
      #- /mnt/svm-chem/grid/univa:/mnt/svm-chem/grid/univa:ro
    expose:
      - 8080
    #Real host and domainname if ssl certs used  
    #hostname: gbjhccx00
    #domainname: region.company.org

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    ports:
      - "80:80"
      #- "443:443"
    #volumes:
      #- ./certs/:/etc/nginx/ssl:ro

  redis:
    image: redis
    container_name: redis
    restart: always
    sysctls: 
      net.core.somaxconn: "1024"

  worker:
    build: ./flask
    container_name: worker
    restart: always 
    environment:
      - TZ=Europe/London
    command: "celery -A app.HPCapps.tasks.celery worker -P gevent -c1000 --loglevel=DEBUG"
    user: nobody
    links:
        - redis
    volumes:
        - ./flask/:/app:ro
        - ../inventory/data:/data

  #celery-beat:
   # build: ./flask
   # command: celery -A proj beat -l info
   # volumes:
     # - ./flask/:/app
    #depends_on:
      #- redis
      
  #monitor:
    #build:
      #context: ./flask
      #dockerfile: Dockerfile
    #ports:
     #- "5555:5555"
    #entrypoint: flower
    #command: "flower -A app.HPCapps.tasks.celery --port=5555 --broker=redis://redis:6379"
    #depends_on:
     # - redis
    #volumes: ['./flask:/app:ro']

volumes:
    app: {}

